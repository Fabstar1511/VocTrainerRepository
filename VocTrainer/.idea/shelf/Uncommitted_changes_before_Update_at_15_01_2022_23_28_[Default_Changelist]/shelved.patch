Index: app/src/main/java/com/voctrainer/MovingCounter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.voctrainer;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.hardware.Sensor;\r\nimport android.hardware.SensorEvent;\r\nimport android.hardware.SensorEventListener;\r\nimport android.hardware.SensorManager;\r\nimport android.os.Bundle;\r\nimport android.se.omapi.Session;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\n\r\npublic class MovingCounter extends AppCompatActivity implements SensorEventListener, View.OnClickListener{\r\n\r\n    public Button btn_help;\r\n    public Button btn_DEBUG_Skip_to_100;\r\n    public Button btn_backToStart;\r\n\r\n    private final int MAXIMUM_OF_STEPS = 30;\r\n    private TextView tv_steps;\r\n    private SensorManager sensorManager;\r\n    private Sensor mStepCounter, mStepDetector;\r\n    private boolean isCounterSensorPresent, isDetectorSensorPresent;\r\n    public int stepCount = 0, stepDetect = 0;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_gui2_moving_counter);\r\n        this.setTitle(\"Schritte zählen\");\r\n\r\n        btn_help = (Button) findViewById(R.id.button_help);\r\n        btn_help.setText(\"?\");\r\n        btn_help.setOnClickListener(this);\r\n\r\n        this.stepDetect = getIntent().getIntExtra(\"countedSteps\", 0);\r\n\r\n        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);\r\n        tv_steps = (TextView) findViewById(R.id.textView_steps);\r\n        tv_steps.setText(String.valueOf(stepDetect));\r\n\r\n        sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);\r\n\r\n        btn_DEBUG_Skip_to_100 = (Button) findViewById(R.id.button_Debug_100Steps);\r\n        btn_DEBUG_Skip_to_100.setText(\"Start\");\r\n        btn_DEBUG_Skip_to_100.setOnClickListener(this);\r\n        btn_backToStart = (Button) findViewById(R.id.button_backToStart);\r\n        btn_backToStart.setText(\"zurück\");\r\n        btn_backToStart.setOnClickListener(this);\r\n\r\n        /*\r\n        if(sensorManager.getDefaultSensor(Sensor.TYPE_STEP_COUNTER) != null){\r\n            mStepCounter = sensorManager.getDefaultSensor(Sensor.TYPE_STEP_COUNTER);\r\n            isCounterSensorPresent = true;\r\n        }\r\n        else {\r\n            tv_steps.setText(\"Counter Sensor is not present\");\r\n            isCounterSensorPresent = false;\r\n        }\r\n        */\r\n        init();\r\n    }\r\n\r\n    public void init(){\r\n        if(sensorManager.getDefaultSensor(Sensor.TYPE_STEP_DETECTOR) != null){\r\n            mStepDetector = sensorManager.getDefaultSensor(Sensor.TYPE_STEP_DETECTOR);\r\n            isDetectorSensorPresent = true;\r\n        }\r\n        else {\r\n            tv_steps.setText(\"Detector Sensor is not present!\");\r\n            isDetectorSensorPresent = false;\r\n        }\r\n    }\r\n\r\n    public void onBackPressed(){\r\n        Intent intent = new Intent(MovingCounter.this, MainActivity.class);\r\n        startActivity(intent);\r\n        this.finish();\r\n    }\r\n\r\n    @Override\r\n    public void onSensorChanged(SensorEvent sensorEvent) {\r\n        //if(sensorEvent.sensor == mStepCounter){\r\n        //    stepCount = (int) sensorEvent.values[0];\r\n        //    tv_steps.setText(String.valueOf(stepCount));\r\n        //}\r\n        if(this.stepDetect >= MAXIMUM_OF_STEPS) goToGeoMap();\r\n        if(sensorEvent.sensor == mStepDetector){\r\n            stepDetect = (int) (stepDetect + sensorEvent.values[0]);\r\n            tv_steps.setText(String.valueOf(stepDetect));\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onAccuracyChanged(Sensor sensor, int i) {\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        //if (sensorManager.getDefaultSensor(Sensor.TYPE_STEP_COUNTER) != null)\r\n        //    sensorManager.registerListener(this, mStepCounter, SensorManager.SENSOR_DELAY_NORMAL);\r\n\r\n        if (sensorManager.getDefaultSensor(Sensor.TYPE_STEP_DETECTOR) != null)\r\n            sensorManager.registerListener(this, mStepDetector, SensorManager.SENSOR_DELAY_NORMAL);\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        //if(sensorManager.getDefaultSensor(Sensor.TYPE_STEP_COUNTER) != null)\r\n        //    sensorManager.unregisterListener(this, mStepCounter);\r\n\r\n        if(sensorManager.getDefaultSensor(Sensor.TYPE_STEP_DETECTOR) != null)\r\n            sensorManager.unregisterListener(this, mStepDetector);\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        if(v.getId() == R.id.button_help) {\r\n            Intent intent = new Intent(MovingCounter.this, Help.class);\r\n            intent.putExtra(\"activity_id\", 1); //MainActivity is ID = 0\r\n            intent.putExtra(\"countedSteps\", this.stepDetect);\r\n            startActivity(intent);\r\n        }\r\n        else if(v.getId() == R.id.button_backToStart) {\r\n            //sensorManager.unregisterListener(this, mStepCounter);\r\n            sensorManager.unregisterListener(this, mStepDetector);\r\n            Intent intent = new Intent(MovingCounter.this, MainActivity.class);\r\n            startActivity(intent);\r\n            this.finish();\r\n            // if you unregister the hardware will stop detecting steps\r\n            //sensorManager.unregisterListener(this);\r\n        }\r\n        else if(v.getId() == R.id.button_Debug_100Steps) {\r\n            Intent intent = new Intent(MovingCounter.this, ViewSteps.class);\r\n            startActivity(intent);\r\n            this.finish();\r\n        }\r\n    }\r\n\r\n    public void goToGeoMap(){\r\n        //sensorManager.unregisterListener(this, mStepCounter);\r\n        sensorManager.unregisterListener(this, mStepDetector);\r\n        Intent intent = new Intent(MovingCounter.this, ViewSteps.class);\r\n        startActivity(intent);\r\n        this.finish();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/voctrainer/MovingCounter.java b/app/src/main/java/com/voctrainer/MovingCounter.java
--- a/app/src/main/java/com/voctrainer/MovingCounter.java	(revision 37b6a1efdf46c21274b286f887e7f3f1eea8ac05)
+++ b/app/src/main/java/com/voctrainer/MovingCounter.java	(date 1642285667502)
@@ -1,23 +1,15 @@
 package com.voctrainer;
 
-import android.content.Context;
 import android.content.Intent;
-import android.hardware.Sensor;
-import android.hardware.SensorEvent;
-import android.hardware.SensorEventListener;
-import android.hardware.SensorManager;
 import android.os.Bundle;
-import android.se.omapi.Session;
 import android.view.View;
-import android.view.WindowManager;
 import android.widget.Button;
-import android.widget.TextView;
 import android.widget.Toast;
 
 import androidx.appcompat.app.AppCompatActivity;
 
 
-public class MovingCounter extends AppCompatActivity implements SensorEventListener, View.OnClickListener{
+public class MovingCounter extends AppCompatActivity implements View.OnClickListener{
 
     public Button btn_help;
     public Button btn_DEBUG_Skip_to_100;
@@ -40,104 +32,26 @@
         btn_help.setText("?");
         btn_help.setOnClickListener(this);
 
-        this.stepDetect = getIntent().getIntExtra("countedSteps", 0);
-
-        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
-        tv_steps = (TextView) findViewById(R.id.textView_steps);
-        tv_steps.setText(String.valueOf(stepDetect));
-
-        sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
-
         btn_DEBUG_Skip_to_100 = (Button) findViewById(R.id.button_Debug_100Steps);
         btn_DEBUG_Skip_to_100.setText("Start");
         btn_DEBUG_Skip_to_100.setOnClickListener(this);
+
         btn_backToStart = (Button) findViewById(R.id.button_backToStart);
         btn_backToStart.setText("zurück");
         btn_backToStart.setOnClickListener(this);
-
-        /*
-        if(sensorManager.getDefaultSensor(Sensor.TYPE_STEP_COUNTER) != null){
-            mStepCounter = sensorManager.getDefaultSensor(Sensor.TYPE_STEP_COUNTER);
-            isCounterSensorPresent = true;
-        }
-        else {
-            tv_steps.setText("Counter Sensor is not present");
-            isCounterSensorPresent = false;
-        }
-        */
-        init();
-    }
-
-    public void init(){
-        if(sensorManager.getDefaultSensor(Sensor.TYPE_STEP_DETECTOR) != null){
-            mStepDetector = sensorManager.getDefaultSensor(Sensor.TYPE_STEP_DETECTOR);
-            isDetectorSensorPresent = true;
-        }
-        else {
-            tv_steps.setText("Detector Sensor is not present!");
-            isDetectorSensorPresent = false;
-        }
-    }
-
-    public void onBackPressed(){
-        Intent intent = new Intent(MovingCounter.this, MainActivity.class);
-        startActivity(intent);
-        this.finish();
-    }
-
-    @Override
-    public void onSensorChanged(SensorEvent sensorEvent) {
-        //if(sensorEvent.sensor == mStepCounter){
-        //    stepCount = (int) sensorEvent.values[0];
-        //    tv_steps.setText(String.valueOf(stepCount));
-        //}
-        if(this.stepDetect >= MAXIMUM_OF_STEPS) goToGeoMap();
-        if(sensorEvent.sensor == mStepDetector){
-            stepDetect = (int) (stepDetect + sensorEvent.values[0]);
-            tv_steps.setText(String.valueOf(stepDetect));
-        }
-    }
-
-    @Override
-    public void onAccuracyChanged(Sensor sensor, int i) {
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        //if (sensorManager.getDefaultSensor(Sensor.TYPE_STEP_COUNTER) != null)
-        //    sensorManager.registerListener(this, mStepCounter, SensorManager.SENSOR_DELAY_NORMAL);
-
-        if (sensorManager.getDefaultSensor(Sensor.TYPE_STEP_DETECTOR) != null)
-            sensorManager.registerListener(this, mStepDetector, SensorManager.SENSOR_DELAY_NORMAL);
-    }
-
-    @Override
-    protected void onPause() {
-        super.onPause();
-        //if(sensorManager.getDefaultSensor(Sensor.TYPE_STEP_COUNTER) != null)
-        //    sensorManager.unregisterListener(this, mStepCounter);
-
-        if(sensorManager.getDefaultSensor(Sensor.TYPE_STEP_DETECTOR) != null)
-            sensorManager.unregisterListener(this, mStepDetector);
     }
 
     @Override
     public void onClick(View v) {
         if(v.getId() == R.id.button_help) {
-            Intent intent = new Intent(MovingCounter.this, Help.class);
-            intent.putExtra("activity_id", 1); //MainActivity is ID = 0
-            intent.putExtra("countedSteps", this.stepDetect);
-            startActivity(intent);
+        Intent intent = new Intent(MovingCounter.this, Help.class);
+        intent.putExtra("activity_id", 1); //MainActivity is ID = 0
+        startActivity(intent);
         }
         else if(v.getId() == R.id.button_backToStart) {
-            //sensorManager.unregisterListener(this, mStepCounter);
-            sensorManager.unregisterListener(this, mStepDetector);
             Intent intent = new Intent(MovingCounter.this, MainActivity.class);
             startActivity(intent);
             this.finish();
-            // if you unregister the hardware will stop detecting steps
-            //sensorManager.unregisterListener(this);
         }
         else if(v.getId() == R.id.button_Debug_100Steps) {
             Intent intent = new Intent(MovingCounter.this, ViewSteps.class);
@@ -145,11 +59,8 @@
             this.finish();
         }
     }
-
-    public void goToGeoMap(){
-        //sensorManager.unregisterListener(this, mStepCounter);
-        sensorManager.unregisterListener(this, mStepDetector);
-        Intent intent = new Intent(MovingCounter.this, ViewSteps.class);
+    public void onBackPressed(){
+        Intent intent = new Intent(MovingCounter.this, MainActivity.class);
         startActivity(intent);
         this.finish();
     }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidLayouts\">\r\n    <shared>\r\n      <config>\r\n        <device id=\"pixel\" />\r\n        <device id=\"pixel_4_xl\" />\r\n      </config>\r\n    </shared>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"NONE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"6395f137-a757-4000-9b7d-7b1cdef23cf1\" name=\"Default Changelist\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/voctrainer/MovingCounter.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/voctrainer/MovingCounter.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"device_and_snapshot_combo_box_target[C:\\Users\\Fabstar\\.android\\avd\\Copy_of_Samsung_Galaxy_S7_API_26.avd]\" />\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"VocTrainer\" type=\"f1a62948:ProjectNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"VocTrainer\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"app\" type=\"2d1252cf:ModuleNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"VocTrainer\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"app\" type=\"2d1252cf:ModuleNode\" />\r\n                <item name=\"Dependencies\" type=\"6de06a37:ExternalSystemViewDefaultContributor$MyDependenciesNode\" />\r\n              </path>\r\n            </expand>\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$/..\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"22QrotFXLO09AsDG3YX1PSMaffI\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"dart.analysis.tool.window.visible\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n    <property name=\"show.migrate.to.gradle.popup\" value=\"false\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"android.template.303041230\">\r\n      <recent name=\"com.voctrainer\" />\r\n    </key>\r\n    <key name=\"android.template.-1516482616\">\r\n      <recent name=\"com.voctrainer\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"app\" type=\"AndroidRunConfigurationType\" factoryName=\"Android App\" activateToolWindowBeforeRun=\"false\">\r\n      <module name=\"VocTrainer.app\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"\" />\r\n      <option name=\"MODE\" value=\"default_activity\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"SKIP_NOOP_APK_INSTALLATIONS\" value=\"true\" />\r\n      <option name=\"FORCE_STOP_RUNNING_APP\" value=\"true\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"DEVICE_AND_SNAPSHOT_COMBO_BOX\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n      </Hybrid>\r\n      <Java />\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Sample Java Methods\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"false\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"6395f137-a757-4000-9b7d-7b1cdef23cf1\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1639780834707</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1639780834707</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 37b6a1efdf46c21274b286f887e7f3f1eea8ac05)
+++ b/.idea/workspace.xml	(date 1642285692143)
@@ -12,16 +12,13 @@
     <option name="autoReloadType" value="NONE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="6395f137-a757-4000-9b7d-7b1cdef23cf1" name="Default Changelist" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/voctrainer/MovingCounter.java" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/voctrainer/MovingCounter.java" afterDir="false" />
-    </list>
+    <list default="true" id="6395f137-a757-4000-9b7d-7b1cdef23cf1" name="Default Changelist" comment="" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
-  <component name="ExecutionTargetManager" SELECTED_TARGET="device_and_snapshot_combo_box_target[C:\Users\Fabstar\.android\avd\Copy_of_Samsung_Galaxy_S7_API_26.avd]" />
+  <component name="ExecutionTargetManager" SELECTED_TARGET="device_and_snapshot_combo_box_target[ce02182212e264970c]" />
   <component name="ExternalProjectsData">
     <projectState path="$PROJECT_DIR$">
       <ProjectState />
